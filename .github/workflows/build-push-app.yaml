name: zz-App Image Build
run-name: ${{ inputs.target-name }} build

on:
  workflow_call:
    inputs:
      force-push:
        description: "push to GHCR"
        type: boolean
        required: true
        default: false
      target-name:
        description: "docker-bake target name"
        type: string
        required: true
      target-args:
        description: "extra build args (json key:value pairs)"
        type: string
        required: true
        default: "{}"
  workflow_dispatch:
    inputs:
      force-push:
        description: "push to GHCR"
        type: boolean
        required: true
        default: false
      target-name:
        description: "docker-bake target name"
        type: string
        required: true
      target-args:
        description: "extra build args (json key:value pairs)"
        type: string
        required: true
        default: "{}"

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}-${{ inputs.target-name }}
  cancel-in-progress: true

env:
  BUILDX_VERSION: latest
  BUILDKIT_IMAGE: moby/buildkit:buildx-stable-1

  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository }}
  IMAGE_PLATFORMS: "linux/amd64"

jobs:
  build:
    name: Build (CUDA)
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - name: ${{ inputs.target-name }}
            target: ${{ inputs.target-name }}
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
              type=sha,format=short
              type=ref,event=branch
              type=ref,event=tag
              type=ref,event=pr
            build-args: ${{ fromJSON(inputs.target-args) }}

    steps:
      - name: Free disk space
        id: free-disk-space
        run: |
          df -h .
          sudo find /usr/share/dotnet -delete      # frees 20GB on the runner
          sudo find /usr/local/lib/android -delete # frees 10GB on the runner
          df -h .

      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ env.IMAGE_PLATFORMS }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker tags
        id: meta
        uses: docker/metadata-action@v4
        env: ${{ matrix.build-args }}
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ inputs.target-name }}
          tags: ${{ matrix.tags }}

      - name: Save build metadata
        id: dump-meta
        env: ${{ matrix.build-args }}
        run: |
          docker buildx bake --print \
            -f docker-bake.hcl \
            -f ${{ steps.meta.outputs.bake-file }} \
            ${{ matrix.target }} | tee docker-bake-${{ matrix.target }}.hcl

      - name: Upload build metadata
        id: upload-meta
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: meta-${{ matrix.target }}
          path: |
            ${{ steps.meta.outputs.bake-file }}
            docker-bake-${{ matrix.target }}.hcl

      - name: Build & Push Image
        id: build-push
        env: ${{ matrix.build-args }}
        uses: docker/bake-action@v3
        with:
          targets: ${{ matrix.target }}
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || inputs.force-push }}
          set: |
            *.cache-from=type=gha
